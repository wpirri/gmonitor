#!/bin/sh

if [ -f /etc/gmonitor ]; then
  . /etc/gmonitor
else
  if [ -f /etc/gmonitor/gmonitor ]; then
    . /etc/gmonitor/gmonitor
  else
    if [ -f /usr/etc/gmonitor ]; then
      . /usr/etc/gmonitor
    else
      if [ -f /usr/etc/gmonitor/gmonitor ]; then
        . /usr/etc/gmonitor/gmonitor
      fi
    fi
  fi
fi

head()
{
  clear
  printf "  Menu de configuracion - Gnu-Monitor\n"
  printf "= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n"
}

foot()
{
  printf "= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n"
}

list_help()
{
  head
  echo "   help:                 Esta pantalla"
  echo "   servers:              Listado de servers"
  echo "   servicios:            Listado de servicios"
  echo "   add:                  Agrega un nuevo server al sistema"
  echo "                         Solo para servers stand-alone"
  echo "   remove <server>:      Quita un server del sistema"
  echo "   edit <server>:        Modifica los parametros de un server"
  echo "   status:               Estado de los servers"
  echo "   config:               Configuracion de los servers"
  echo "   start <server | all>: Subir server o todos"
  echo "   stop  <server | all>: Bajar server o todos"
  echo "   refresh               Actualiza la base de servicios"
  echo "   loglevel nnn          Setea nivel de logueo de 1 a 100"
  foot
}

reload_config()
{
  gmt_pid=`ps -eaf | grep -v grep | grep $SERVER_BIN/gmt | awk '{ print $2; }'`
  kill -HUP $gmt_pid > /dev/null 2>&1
}

list_status()
{
head
  $SERVER_BIN/gmon_status all
foot
}

list_servers()
{
head
  $CLIENT_BIN/gm_viewcfg --srv
foot
}

list_servicios()
{
head
  $CLIENT_BIN/gm_viewcfg --svc
foot
}

start_server()
{
  head
  printf " Start server %s\n" "$1"
  $SERVER_BIN/gmon_start $1
  $SERVER_BIN/gmon_status $1
  foot
}

stop_server()
{
  head
  printf " Stop server %s\n" "$1"
  $SERVER_BIN/gmon_stop $1
  $SERVER_BIN/gmon_status $1
  foot
}

add_server()
{
  head
  printf "  Nombre del server: " ; read server_name
  x=`grep "^$server_name|" $SERVER_CONF/server.tab`
  if [ "X${x}" != "X" ]; then
    echo " ERROR: El nombre del server ya estaba dado de alta"
    return
  fi
  printf "  Path completo del server: "; read server_path
  if [ ! -f "${server_path}" ]; then
    echo " ERROR: El server no se encuentra en el path"
    return
  fi
  printf "  Descripcion: " ; read server_desc
  echo "${server_name}|${server_desc}|2|${server_path}" >> $SERVER_CONF/server.tab
  reload_config
  printf "\n  SERVER INSTALADO\n"
  foot
}

remove_server()
{
  head
  x=`grep "^$1|" $SERVER_CONF/server.tab`
  if [ "X${x}" = "X" ]; then
    echo " ERROR: El server no existe"
    return
  fi
  server=`echo $x | awk -F'|' '{ print $1 }'`
  descripcion=`echo $x | awk -F'|' '{ print $2 }'`
  printf "Server:      ${server}\n"
  printf "Path:        %s\n" `echo $x | awk -F'|' '{ print $4 }'`
  printf "Descripcion: %s\n" "${descripcion}"
  printf " \nEliminar? [yes/No] " ; read rc
  if [ "X${rc}" = "Xyes" ]
  then
    $SERVER_BIN/gmon_stop $server
    mv $SERVER_CONF/server.tab /tmp
    grep -v "^${server}|" /tmp/server.tab > $SERVER_CONF/server.tab
    printf "\n  SERVER ${server} ELIMINADO\n"
  fi
  foot
}

edit_server()
{
  head
  x=`grep "^$1|" $SERVER_CONF/server.tab`
  if [ "X${x}" = "X" ]; then
    echo " ERROR: El server no existe"
    return
  fi
  server=`echo $x | awk -F'|' '{ print $1 }'`
  server_desc=`echo $x | awk -F'|' '{ print $2 }'`
  modo=`echo $x | awk -F'|' '{ print $3 }'`
  server_path=`echo $x | awk -F'|' '{ print $4 }'`
  printf "Server:      ${server}\n"
  printf "Path:        ${server_path}\n"
  printf "Nuevo?       " ; read x
  if [ "X${x}" != "X" ]
  then
    server_path="${x}"
  fi
  printf "Descripcion: ${server_desc}\n"
  printf "Nueva?       " ; read x
  if [ "X${x}" != "X" ]
  then
    server_desc="${x}"
  fi

  printf " \nModificar? [yes/No] " ; read rc
  if [ "X${rc}" = "Xyes" ]
  then
    $SERVER_BIN/gmon_stop $server
    mv $SERVER_CONF/server.tab /tmp
    cat /tmp/server.tab | while read line
    do
      x=`echo $line | grep "^${server}|"`
      if [ "X${x}" != "X" ]
      then
        echo "${server}|${server_desc}|${modo}|${server_path}" >> $SERVER_CONF/server.tab
      else
        echo "${line}" >> $SERVER_CONF/server.tab
      fi
    done
    printf "\n  SERVER ${server} MODIFICADO\n"
  fi
  foot
}

list_help
printf "$CONFIG_PROMPT"
while read sel param1 param2
do
  case "$sel" in
  servers)
    list_servers
    ;;
  servicios)
    list_servicios
    ;;
  exit)
    clear
    exit
    ;;
  start)
    start_server $param1
    ;;
  stop)
    stop_server $param1
    ;;
  status)
    list_status
    ;;
  add)
    add_server
    ;;
  remove)
    remove_server $param1
    ;;
  edit)
    edit_server $param1
    ;;
  refresh)
    reload_config
    ;;
  loglevel)
    gm_loglevel $param1
    sleep 3
    list_help
    ;;
  *)
    list_help
    ;;
  esac
  printf "$CONFIG_PROMPT"
done

